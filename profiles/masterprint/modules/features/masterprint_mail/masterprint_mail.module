<?php
/**
 * @file
 * Code for the masterprint_mail feature.
 */

include_once 'masterprint_mail.features.inc';

/**
 * Implements hook_init()
 */
function masterprint_mail_init() {
  //
}

/**
 * Implements hook_menu()
 */
function masterprint_mail_menu() {
  $items['user/%user/mail_templates'] = array(
    'title' => '邮件设置',
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('manage mail templates'),
    'page callback' => 'masterprint_mail_load_managed_mail_templates',
    'weight' => 300,
  );
  $items['user/%user/mail_templates/list'] = array(
    'title' => '邮件模板列表',
    'access arguments' => array('manage mail templates'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['mail_templates/%pet/edit'] = array(
    'title' => '邮件模板编辑',
    'title callback' => 'masterprint_mail_pet_template_edit_title',
    'title arguments' => array(1),
    'page callback' => 'masterprint_mail_pet_template_edit',
    'page arguments' => array(1),
    'access arguments' => array('manage mail templates'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_permission()
 */
function masterprint_mail_permission() {
  return array(
    'manage mail templates' => array(
      'title' => t('Manage mail templates'),
      'description' => t('Manage mail templates.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Page callback
 */
function masterprint_mail_load_managed_mail_templates() {
  $output = '';
  $output .= views_embed_view('masterprint_email_templates', 'list_block');
  return $output;
}

/**
 * Title callback
 */
function masterprint_mail_pet_template_edit_title($pet) {
  $title = !empty($pet->title) ? $pet->title : '';
  return $title ;
}
/**
 * Page callback
 */
function masterprint_mail_pet_template_edit($pet) {
  return entity_form('pet', $pet);
}

/**
 * Implements hook_form_alter()
 */
function masterprint_mail_form_alter(&$form, &$form_state) {
  global $user;
  if ($form['#form_id'] == 'pet_form') {
    $form['#submit'][] = 'masterprint_mail_pet_form_submit_handler';
    // Hide the Mimemail section, not needed
    unset($form['mimemail']);
    if(isset($form['#redirect'])) {
      unset($form['#redirect']);
    }

    if (!empty($form['actions']['cancel'])) {
      $form['actions']['cancel']['#href'] = 'user/' . $user->uid . '/mail_templates';
    }
  }
}

/**
 * Send mail to user to notify him/her that an new account has created.
 *
 * @param $name
 *  Pet template name
 * @param $account
 *  The account object of a user
 */
function masterprint_mail_send_account_notify_mail($name, $account = NULL) {
  $account = (object) $account;
  $pet = pet_load($name);

  if (!$pet) {
    watchdog('pet', 'Unable to load PET %name.', array('%name' => $name), WATCHDOG_ERROR);
    return;
  }
  $module = 'masterprint_mail';
  $key = $pet->name;
  $to = $account->mail;
  $from = !empty($pet->from_override) ? $pet->from_override : varible_get('site_mail', 'shanghai@hf-ps.com');

  $params = array();
  $params['account'] = $account;
  $params['pet'] = $pet;

  drupal_mail($module, $key, $to, language_default(), $params, $from);
}

/**
 * Implements hook_mail()
 */
function masterprint_mail_mail($key, &$message, $params) {
  $pet = $params['pet'];
  $account = $params['account'];

  $message['subject'] = $pet->subject;
  $message['body'][] = token_replace($pet->mail_body, array('user' => $account));
}
