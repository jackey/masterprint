<?php

include_once 'masterprint_user.features.inc';

/**
 * Implements hook_menu()
 */
function masterprint_user_menu() {
  $items = array();
  $items['admin/config/masterprint/password_change'] = array(
    'title' => 'Password Change',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('masterprint_user_password_change_settings'),
    'access arguments' => array('administer site configuration'),
    'weight' => 10,
    'file' => 'masterprint_user.admin.inc',
  );
  return $items;
}

/**
 * Check if the user should change password
 */
function masterprint_user_check_user_change_password_status($uid) {
  // An identifier that the user don't need to change password
  $status = FALSE;

  // Check if the user is in the specified role
  $user = user_load($uid);
  $user_roles = !empty($user->roles) ? $user->roles : array();

  $role_settings = variable_get('masterprint_user_password_change_roles', array());
  $change_roles = !empty($role_settings) ? array_filter($role_settings) : array();
  $intersection = array_intersect_key($user_roles, $change_roles);

  if (!empty($intersection)) {
    // Check if the user have changed password
    $result = db_select('masterprint_user_password_change', 'c')
      ->fields('c')
      ->condition('uid', $uid)
      ->condition('status', 1)
      ->execute()
      ->fetchAssoc();

    if (empty($result)) {
      $status = TRUE;
    }
  }
  return $status;
}

/**
 * Implements hook_user_login()
 */
function masterprint_user_login(&$edit, $account) {

}

/**
 * Implements hook_user_update()
 */
function masterprint_user_update(&$edit, $account, $category) {
  // If the password has been changed, log it
  if ($account->pass != $account->original->pass) {
    masterprint_user_log_password_change($account->uid);
  }
}

/**
 * Log the user has changed his/her password
 */
function masterprint_user_log_password_change($uid) {
  db_merge('masterprint_user_password_change')
    ->key(array('uid' => $uid))
    ->fields(array(
      'changed_date' => REQUEST_TIME,
      'status' => 1,
    ))
    ->execute();
}

/**
 * Implements hook_init()
 */
function masterprint_user_init() {
  global $user;
  $edit_path = 'user/' . $user->uid . '/edit';
  $need_change = masterprint_user_check_user_change_password_status($user->uid);

  if ($need_change) {
    if (current_path() != $edit_path) {
      drupal_goto($edit_path);
    }
    drupal_set_message('请修改密码！');
  }
}

/**
 * Implements hook_form_alter()
 */
function masterprint_user_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  if ($form_id == 'user_profile_form') {
    $allowed_roles = array(
      'administrator',
      '管理员',
      'AE业务经理',
    );
    $allowed_rids = array();
    foreach ($allowed_roles as $allowed_role) {
      $role_obj = user_role_load_by_name($allowed_role);
      if (!empty($role_obj->rid)) {
        $allowed_rids[$role_obj->rid] = $role_obj->name;
      }
    }
    $user_roles = !empty($user->roles) ? $user->roles : array();
    // For admin & ae, show the whole list
    $intersection = array_intersect_key($allowed_rids, $user_roles);

    if (empty($intersection) || $user->uid !== 1) {
      unset($form['field_created_by']);
      unset($form['signature_settings']);
      unset($form['contact']);
      unset($form['locale']);
      unset($form['locale']['language']);
    }
  }
}
